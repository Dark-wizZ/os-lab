#include <stdio.h>
#include <conio.h>

int main()
{
		int n, m, i, j, k, flag;
		int available[100], max[100][100], allocation[100][100], need[100][100];
				int work[100], finish[100], safeSeq[100], index = 0;
		printf("Enter number of process: ");
		scanf("%d", &n);
		printf("Enter number of resources: ");
		scanf("%d", &m);

		printf("Enter total numbers of each resources: ");
		for(i = 0; i < m; i++)
		{
				scanf("%d", &available[i]);
		}
		printf("Enter Max resources for each process:\n");
		for(i = 0; i < n; i++)
		{
				printf("for process %d:", i+1);
				for(j = 0; j < m; j++)
				{
						scanf("%d", &max[i][j]);
				}
		}
		printf("Enter allocated resources for each process:\n");
		for(i = 0; i < n; i++)
		{
				printf("for process %d:", i+1);
				for(j = 0; j < m; j++)
				{
						scanf("%d", &allocation[i][j]);
						need[i][j] = max[i][j] - allocation[i][j];
				}
		}

		for(i = 0; i < m; i++)
		{
				work[i] = available[i];
		}
		for(i = 0; i < n; i++)
		{
				finish[i] = 0;
		}
		flag = 1;
    while(flag)
    {
        flag = 0;
        for(i = 0; i < n; i++)
        {
            if(finish[i] == 0)
            {
                int temp = 1;
                for(j = 0; j < m; j++)
                {
                    if(need[i][j] > work[j])
                    {
                        temp = 0;
                        break;
                    }
                }
                if(temp)
                {
                    for(j = 0; j < m; j++)
                    {
                        work[j] += allocation[i][j];
                    }
                    finish[i] = 1;
                    safeSeq[index++] = i+1;
                    flag = 1;
                }
            }
        }
    }
    printf("Available Resources:\n");
    for(i = 0; i < m; i++)
    {
        printf("%d ", work[i]);
    }
    printf("\nAllocated\t\tMax\t\tNeed\n");
    for(i = 0; i < n; i++)
    {
        for(j = 0; j < m; j++)
        {
            printf("%d", allocation[i][j]);
        }
        printf("\t\t");
        for(j = 0; j < m; j++)
        {
            printf("%d", max[i][j]);
        }
        printf("\t\t");
        for(j = 0; j < m; j++)
        {
            printf("%d", need[i][j]);
        }
        printf("\n");
    }
    if(index == n)
    {
        printf("The system is in a safe state!!\n");
        printf("Safe sequence: ");
        for(i = 0; i < n; i++)
        {
            printf("%d ", safeSeq[i]);
        }
    }
    else
    {
        printf("The system is in an unsafe state!!");
    }
    getch();
    return 
}